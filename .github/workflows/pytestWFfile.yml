name: "Pytest WF"

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Pytest WF Job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: チェックアウト
        uses: actions/checkout@v2

      - name: Pythonをセットアップする ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pipenvをインストールする
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Pythonバージョンを確認する
        run: python -c "import sys; print(sys.version)"

      - name: Cache
        uses: actions/cache@v2
        id: pipenv-cache
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile') }}

      - name: Install dependencies
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
        run: pipenv install --dev

      - name: pytestを実行する
        run: pipenv run pytest --html=data/Results/pytestResults.html

      - name: index.htmlを作成する
        run: |
          echo "<!DOCTYPE html><html><head><title>Test Results</title><style>/* スタイルを定義する */body {background-color: #f5f5f5;font-family: Arial, sans-serif;}h1 {font-size: 36px;color: #333;margin-top: 20px;margin-bottom: 20px;text-align: center;text-shadow: 2px 2px #ccc;letter-spacing: 2px;text-transform: uppercase;}.results {display: flex;justify-content: center;margin-top: 50px;}.results a {display: block;width: 400px;height: 100px;background-color: #f0f0f0;border: 2px solid #ccc;text-align: center;line-height: 100px;font-size: 24px;color: #444;margin: 20px;border-radius: 10px;transition: all 0.2s ease-in-out;text-decoration: none;font-weight: bold;text-shadow: 1px 1px #ccc;letter-spacing: 1px;}.results a:hover {transform: translateY(-5px);box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);}</style></head><body><h1>テスト結果</h1><div class=\"results\">" > data/index.html
          echo "<a href=\"Results/pytestResults.html\">Pytest結果</a>" >> data/index.html
          echo "<a href=\"Results/jestResults.html\">Jest結果</a></div></body></html>" >> data/index.html
        if: always()

      - name: レポートを保存する
        uses: actions/upload-artifact@v2
        with:
          name: html-report
          path: data/**

      - name: 結果表示ページを保存する
        uses: actions/upload-pages-artifact@v1
        with:
          path: data

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Pagesのデプロイ
        uses: actions/deploy-pages@v1
        id: deployment
